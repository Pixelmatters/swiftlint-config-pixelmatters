# rule identifiers turned on by default to exclude from running
disabled_rules:
  - colon
  - comma
  - trailing_whitespace
  - identifier_name
  - type_name
  - nesting

# some rules are turned off by default, so you need to opt-in
opt_in_rules:
  - empty_count
  - trailing_newline
  - file_header
  - attributes

# paths to ignore during linting. Takes precedence over `included`.
excluded:
  - Carthage
  - Pods

# give warning only for force casting
force_cast: warning

# give warning only for force try
force_try:
  severity: warning

attributes:
  always_on_same_line: ["@IBAction", "@IBSegueAction", "@NSManaged", "@discardableResult", "@escaping", "@objc"]

# warn user when the line length is bigger than 120, give error if it is bigger than 200
line_length:
  warning: 120
  error: 180
  ignores_function_declarations: true
  ignores_comments: true
  ignores_urls: true

# warn user when the type body length is bigger than 300, give error if it is bigger than 400
type_body_length:
  warning: 300
  error: 400

# warn user when the file length is bigger than 500, give error if it is bigger than 800
file_length:
  warning: 500
  error: 800
  ignore_comment_only_lines: true

# warn user when using 3 values in tuple, give error if there are 4
large_tuple:
  warning: 3
  error: 4

custom_rules:
  force_https:
    name: "Force HTTPS over HTTP"
    regex: "((?i)http(?!s))"
    match_kinds: string
    message: "HTTPS should be favored over HTTP"
    severity: warning

  custom_todo:
    name: "TODO Violation"
    regex: "(TODO).(?!.*(https&)).(?!.*issue)"
    match_kinds: comment
    message: "TODOs must include a link to the issue."
    severity: warning

  multiple_empty_lines:
    included: ".*.swift"
    name: "Multiple Empty Lines"
    regex: '((?:\s*\n){3,})'
    message: "There are too many line breaks"
    severity: warning

  non_weak_delegate_datasource:
    included: ".*.swift"
    name: "Retain Cycle"
    regex: '^\ *var\ *(delegate)'
    message: "Delegate/datasource may be weak."
    severity: warning

  multiline_commented_code:
    included: ".*.swift"
    name: "Commented Code"
    regex: '(?<!:|\/)\/\/\h*[a-z.](?!wiftlint)'
    match_kinds: comment
    message: "Comment starting with lowercase letter - did you forget to delete old code?"

  protocol_conformance:
    included: ".*.swift"
    name: "Protocol Conformance"
    message: "Protocol conformance should be declared in separate extensions in the same file"
    regex: "(class|struct|extension)[[:space:]]+(?i:(?![^d]*delegate:))[^'\"()<>{},!?:]+:([^'\"<>(){},!?:]+,)+[^'\"<>(){},!?:]*\\{"
    match_kinds:
      - keyword
    severity: warning

  public_ui_model:
    included: ".*.swift"
    name: "Public UIModel"
    regex: "^(open |private |internal |)(class|struct) [a-zA-Z]+(?i)UI(Model|DAO)"
    message: "UIModel must be public only."
    severity: error

  non_public_datamodel:
    included: ".*.swift"
    name: "Non Public Data Model"
    regex: "^(open |private |public )(class|struct) [a-zA-Z]+(?i)(Request|Response)(Model|DAO|)"
    message: "Data Model must be internal only."
    severity: error

  non_public_datasource:
    included: ".*.swift"
    name: "Non Public DataSource"
    regex: "^(open |private |public )(class|struct) [a-zA-Z]+(?i)DataSource"
    message: "Data Source must be internal only."
    severity: error

  dont_import_uikit:
    included: ".*(?i)(ViewModel|Model|DataSource).swift"
    name: "Don't import UIKit in ViewModel"
    regex: "^import (UIKit)$"
    message: "Don't import UIKit in ViewModel/ Model / DataSource"
    severity: error

  no_fatal_errors:
    included: ".*.swift"
    name: "Don't use fatalError"
    regex: "fatalError"
    message: "Don't use fatalError()"
    severity: error

reporter: "xcode"
